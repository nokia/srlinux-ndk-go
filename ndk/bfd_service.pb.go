//*********************************************************************************************************************
//  Description: interface between router agents and SDK service manager
//
//  Copyright (c) 2018 Nokia
//*********************************************************************************************************************

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.0
// source: ndk/bfd_service.proto

package ndk

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

/// Represents BFD session status.
type BfdmgrSessionStatus int32

const (
	BfdmgrSessionStatus_INVALID    BfdmgrSessionStatus = 0 // Session invalid
	BfdmgrSessionStatus_ADMIN_DOWN BfdmgrSessionStatus = 1 // Admin down
	BfdmgrSessionStatus_DOWN       BfdmgrSessionStatus = 2 // Status down
	BfdmgrSessionStatus_INIT       BfdmgrSessionStatus = 3 // Status initializing
	BfdmgrSessionStatus_UP         BfdmgrSessionStatus = 4 // Status up and running
)

// Enum value maps for BfdmgrSessionStatus.
var (
	BfdmgrSessionStatus_name = map[int32]string{
		0: "INVALID",
		1: "ADMIN_DOWN",
		2: "DOWN",
		3: "INIT",
		4: "UP",
	}
	BfdmgrSessionStatus_value = map[string]int32{
		"INVALID":    0,
		"ADMIN_DOWN": 1,
		"DOWN":       2,
		"INIT":       3,
		"UP":         4,
	}
)

func (x BfdmgrSessionStatus) Enum() *BfdmgrSessionStatus {
	p := new(BfdmgrSessionStatus)
	*p = x
	return p
}

func (x BfdmgrSessionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BfdmgrSessionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_ndk_bfd_service_proto_enumTypes[0].Descriptor()
}

func (BfdmgrSessionStatus) Type() protoreflect.EnumType {
	return &file_ndk_bfd_service_proto_enumTypes[0]
}

func (x BfdmgrSessionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BfdmgrSessionStatus.Descriptor instead.
func (BfdmgrSessionStatus) EnumDescriptor() ([]byte, []int) {
	return file_ndk_bfd_service_proto_rawDescGZIP(), []int{0}
}

/// Represents BFD session type.
type BfdmgrSessionType int32

const (
	BfdmgrSessionType_SESSION_TYPE_UNKNOWN  BfdmgrSessionType = 0 // Unknown session type
	BfdmgrSessionType_SESSION_TYPE_P2P      BfdmgrSessionType = 1 // Peer-to-peer session type
	BfdmgrSessionType_SESSION_TYPE_MICROBFD BfdmgrSessionType = 2 // microbfd session type
)

// Enum value maps for BfdmgrSessionType.
var (
	BfdmgrSessionType_name = map[int32]string{
		0: "SESSION_TYPE_UNKNOWN",
		1: "SESSION_TYPE_P2P",
		2: "SESSION_TYPE_MICROBFD",
	}
	BfdmgrSessionType_value = map[string]int32{
		"SESSION_TYPE_UNKNOWN":  0,
		"SESSION_TYPE_P2P":      1,
		"SESSION_TYPE_MICROBFD": 2,
	}
)

func (x BfdmgrSessionType) Enum() *BfdmgrSessionType {
	p := new(BfdmgrSessionType)
	*p = x
	return p
}

func (x BfdmgrSessionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BfdmgrSessionType) Descriptor() protoreflect.EnumDescriptor {
	return file_ndk_bfd_service_proto_enumTypes[1].Descriptor()
}

func (BfdmgrSessionType) Type() protoreflect.EnumType {
	return &file_ndk_bfd_service_proto_enumTypes[1]
}

func (x BfdmgrSessionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BfdmgrSessionType.Descriptor instead.
func (BfdmgrSessionType) EnumDescriptor() ([]byte, []int) {
	return file_ndk_bfd_service_proto_rawDescGZIP(), []int{1}
}

/// Represents BFD session subtype.
type BfdmgrGeneralSessionDataPb_BfdmgrSessionSubType int32

const (
	BfdmgrGeneralSessionDataPb_SESSION_SUB_TYPE_UNKNOWN    BfdmgrGeneralSessionDataPb_BfdmgrSessionSubType = 0 // Session subtype unknown
	BfdmgrGeneralSessionDataPb_SESSION_SUB_TYPE_SINGLE_HOP BfdmgrGeneralSessionDataPb_BfdmgrSessionSubType = 1 // Single-hop session
	BfdmgrGeneralSessionDataPb_SESSION_SUB_TYPE_MULTI_HOP  BfdmgrGeneralSessionDataPb_BfdmgrSessionSubType = 2 // Multi-hop session
	BfdmgrGeneralSessionDataPb_SESSION_SUB_TYPE_MICROBFD   BfdmgrGeneralSessionDataPb_BfdmgrSessionSubType = 3 // microbfd session
)

// Enum value maps for BfdmgrGeneralSessionDataPb_BfdmgrSessionSubType.
var (
	BfdmgrGeneralSessionDataPb_BfdmgrSessionSubType_name = map[int32]string{
		0: "SESSION_SUB_TYPE_UNKNOWN",
		1: "SESSION_SUB_TYPE_SINGLE_HOP",
		2: "SESSION_SUB_TYPE_MULTI_HOP",
		3: "SESSION_SUB_TYPE_MICROBFD",
	}
	BfdmgrGeneralSessionDataPb_BfdmgrSessionSubType_value = map[string]int32{
		"SESSION_SUB_TYPE_UNKNOWN":    0,
		"SESSION_SUB_TYPE_SINGLE_HOP": 1,
		"SESSION_SUB_TYPE_MULTI_HOP":  2,
		"SESSION_SUB_TYPE_MICROBFD":   3,
	}
)

func (x BfdmgrGeneralSessionDataPb_BfdmgrSessionSubType) Enum() *BfdmgrGeneralSessionDataPb_BfdmgrSessionSubType {
	p := new(BfdmgrGeneralSessionDataPb_BfdmgrSessionSubType)
	*p = x
	return p
}

func (x BfdmgrGeneralSessionDataPb_BfdmgrSessionSubType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BfdmgrGeneralSessionDataPb_BfdmgrSessionSubType) Descriptor() protoreflect.EnumDescriptor {
	return file_ndk_bfd_service_proto_enumTypes[2].Descriptor()
}

func (BfdmgrGeneralSessionDataPb_BfdmgrSessionSubType) Type() protoreflect.EnumType {
	return &file_ndk_bfd_service_proto_enumTypes[2]
}

func (x BfdmgrGeneralSessionDataPb_BfdmgrSessionSubType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BfdmgrGeneralSessionDataPb_BfdmgrSessionSubType.Descriptor instead.
func (BfdmgrGeneralSessionDataPb_BfdmgrSessionSubType) EnumDescriptor() ([]byte, []int) {
	return file_ndk_bfd_service_proto_rawDescGZIP(), []int{2, 0}
}

//*
// Represents BFD session subscription request.
type BfdSessionSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key *BfdmgrGeneralSessionKeyPb `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"` // Optional, to filter on name
}

func (x *BfdSessionSubscriptionRequest) Reset() {
	*x = BfdSessionSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ndk_bfd_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BfdSessionSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BfdSessionSubscriptionRequest) ProtoMessage() {}

func (x *BfdSessionSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ndk_bfd_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BfdSessionSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*BfdSessionSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_ndk_bfd_service_proto_rawDescGZIP(), []int{0}
}

func (x *BfdSessionSubscriptionRequest) GetKey() *BfdmgrGeneralSessionKeyPb {
	if x != nil {
		return x.Key
	}
	return nil
}

//*
// Represents BFD session key.
type BfdmgrGeneralSessionKeyPb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// type is always present, other key field presence is determined by type
	Type BfdmgrSessionType `protobuf:"varint,1,opt,name=type,proto3,enum=ndk.BfdmgrSessionType" json:"type,omitempty"` // Session type
	// key for type == SESSION_TYPE_P2P (if ipv6 link local also uses ipv6_ll_if_id below)
	SrcIpAddr  *IpAddressPb `protobuf:"bytes,2,opt,name=src_ip_addr,json=srcIpAddr,proto3" json:"src_ip_addr,omitempty"`   // Source IP address of the session
	DstIpAddr  *IpAddressPb `protobuf:"bytes,3,opt,name=dst_ip_addr,json=dstIpAddr,proto3" json:"dst_ip_addr,omitempty"`   // Destination IP address of the session
	InstanceId uint32       `protobuf:"varint,4,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"` // Network instance identifier
	// type == SESSION_TYPE_MICROBFD
	InterfaceName string `protobuf:"bytes,5,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	// key for type == SESSION_TYPE_P2P (only ipv6 link local, in addition to other P2P fields above)
	Ipv6LlIfId uint32 `protobuf:"varint,6,opt,name=ipv6_ll_if_id,json=ipv6LlIfId,proto3" json:"ipv6_ll_if_id,omitempty"` // Global if id for ipv6 link local session, otherwise 0
}

func (x *BfdmgrGeneralSessionKeyPb) Reset() {
	*x = BfdmgrGeneralSessionKeyPb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ndk_bfd_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BfdmgrGeneralSessionKeyPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BfdmgrGeneralSessionKeyPb) ProtoMessage() {}

func (x *BfdmgrGeneralSessionKeyPb) ProtoReflect() protoreflect.Message {
	mi := &file_ndk_bfd_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BfdmgrGeneralSessionKeyPb.ProtoReflect.Descriptor instead.
func (*BfdmgrGeneralSessionKeyPb) Descriptor() ([]byte, []int) {
	return file_ndk_bfd_service_proto_rawDescGZIP(), []int{1}
}

func (x *BfdmgrGeneralSessionKeyPb) GetType() BfdmgrSessionType {
	if x != nil {
		return x.Type
	}
	return BfdmgrSessionType_SESSION_TYPE_UNKNOWN
}

func (x *BfdmgrGeneralSessionKeyPb) GetSrcIpAddr() *IpAddressPb {
	if x != nil {
		return x.SrcIpAddr
	}
	return nil
}

func (x *BfdmgrGeneralSessionKeyPb) GetDstIpAddr() *IpAddressPb {
	if x != nil {
		return x.DstIpAddr
	}
	return nil
}

func (x *BfdmgrGeneralSessionKeyPb) GetInstanceId() uint32 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *BfdmgrGeneralSessionKeyPb) GetInterfaceName() string {
	if x != nil {
		return x.InterfaceName
	}
	return ""
}

func (x *BfdmgrGeneralSessionKeyPb) GetIpv6LlIfId() uint32 {
	if x != nil {
		return x.Ipv6LlIfId
	}
	return 0
}

//*
// Represents BFD session data.
type BfdmgrGeneralSessionDataPb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  BfdmgrSessionStatus                             `protobuf:"varint,1,opt,name=status,proto3,enum=ndk.BfdmgrSessionStatus" json:"status,omitempty"`                                              // Status of the session
	SubType BfdmgrGeneralSessionDataPb_BfdmgrSessionSubType `protobuf:"varint,2,opt,name=sub_type,json=subType,proto3,enum=ndk.BfdmgrGeneralSessionDataPb_BfdmgrSessionSubType" json:"sub_type,omitempty"` // Subtype of the session
	// src_if_id is only populated for P2P type
	SrcIfId uint32 `protobuf:"varint,3,opt,name=src_if_id,json=srcIfId,proto3" json:"src_if_id,omitempty"` // Source interface ID
}

func (x *BfdmgrGeneralSessionDataPb) Reset() {
	*x = BfdmgrGeneralSessionDataPb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ndk_bfd_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BfdmgrGeneralSessionDataPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BfdmgrGeneralSessionDataPb) ProtoMessage() {}

func (x *BfdmgrGeneralSessionDataPb) ProtoReflect() protoreflect.Message {
	mi := &file_ndk_bfd_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BfdmgrGeneralSessionDataPb.ProtoReflect.Descriptor instead.
func (*BfdmgrGeneralSessionDataPb) Descriptor() ([]byte, []int) {
	return file_ndk_bfd_service_proto_rawDescGZIP(), []int{2}
}

func (x *BfdmgrGeneralSessionDataPb) GetStatus() BfdmgrSessionStatus {
	if x != nil {
		return x.Status
	}
	return BfdmgrSessionStatus_INVALID
}

func (x *BfdmgrGeneralSessionDataPb) GetSubType() BfdmgrGeneralSessionDataPb_BfdmgrSessionSubType {
	if x != nil {
		return x.SubType
	}
	return BfdmgrGeneralSessionDataPb_SESSION_SUB_TYPE_UNKNOWN
}

func (x *BfdmgrGeneralSessionDataPb) GetSrcIfId() uint32 {
	if x != nil {
		return x.SrcIfId
	}
	return 0
}

//*
// Represents BFD session notification.
type BfdSessionNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op   SdkMgrOperation             `protobuf:"varint,1,opt,name=op,proto3,enum=ndk.SdkMgrOperation" json:"op,omitempty"` // Operation such as session create, delete, or update
	Key  *BfdmgrGeneralSessionKeyPb  `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`                         // Session key
	Data *BfdmgrGeneralSessionDataPb `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`                       // Session data
}

func (x *BfdSessionNotification) Reset() {
	*x = BfdSessionNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ndk_bfd_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BfdSessionNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BfdSessionNotification) ProtoMessage() {}

func (x *BfdSessionNotification) ProtoReflect() protoreflect.Message {
	mi := &file_ndk_bfd_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BfdSessionNotification.ProtoReflect.Descriptor instead.
func (*BfdSessionNotification) Descriptor() ([]byte, []int) {
	return file_ndk_bfd_service_proto_rawDescGZIP(), []int{3}
}

func (x *BfdSessionNotification) GetOp() SdkMgrOperation {
	if x != nil {
		return x.Op
	}
	return SdkMgrOperation_Create
}

func (x *BfdSessionNotification) GetKey() *BfdmgrGeneralSessionKeyPb {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *BfdSessionNotification) GetData() *BfdmgrGeneralSessionDataPb {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_ndk_bfd_service_proto protoreflect.FileDescriptor

var file_ndk_bfd_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6e, 0x64, 0x6b, 0x2f, 0x62, 0x66, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6e, 0x64, 0x6b, 0x1a, 0x14, 0x6e, 0x64,
	0x6b, 0x2f, 0x73, 0x64, 0x6b, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x51, 0x0a, 0x1d, 0x42, 0x66, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6e, 0x64, 0x6b, 0x2e, 0x42, 0x66, 0x64, 0x6d, 0x67, 0x72, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x50, 0x62,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x96, 0x02, 0x0a, 0x19, 0x42, 0x66, 0x64, 0x6d, 0x67, 0x72,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x50, 0x62, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x6e, 0x64, 0x6b, 0x2e, 0x42, 0x66, 0x64, 0x6d, 0x67, 0x72, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x30, 0x0a, 0x0b, 0x73, 0x72, 0x63, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6e, 0x64, 0x6b, 0x2e, 0x49, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x50, 0x62, 0x52, 0x09, 0x73, 0x72, 0x63, 0x49, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x30, 0x0a, 0x0b, 0x64, 0x73, 0x74, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6e, 0x64, 0x6b, 0x2e, 0x49, 0x70, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50, 0x62, 0x52, 0x09, 0x64, 0x73, 0x74, 0x49, 0x70, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0d, 0x69,
	0x70, 0x76, 0x36, 0x5f, 0x6c, 0x6c, 0x5f, 0x69, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x69, 0x70, 0x76, 0x36, 0x4c, 0x6c, 0x49, 0x66, 0x49, 0x64, 0x22, 0xd2,
	0x02, 0x0a, 0x1a, 0x42, 0x66, 0x64, 0x6d, 0x67, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x62, 0x12, 0x30, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x6e, 0x64, 0x6b, 0x2e, 0x42, 0x66, 0x64, 0x6d, 0x67, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x4f, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x34, 0x2e, 0x6e, 0x64, 0x6b, 0x2e, 0x42, 0x66, 0x64, 0x6d, 0x67, 0x72, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x50, 0x62, 0x2e, 0x42, 0x66, 0x64, 0x6d, 0x67, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x09, 0x73, 0x72, 0x63, 0x5f, 0x69, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x72, 0x63, 0x49, 0x66, 0x49, 0x64, 0x22, 0x94, 0x01, 0x0a,
	0x14, 0x42, 0x66, 0x64, 0x6d, 0x67, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x53, 0x55, 0x42, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x55, 0x42, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x48,
	0x4f, 0x50, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x55, 0x42, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x5f, 0x48,
	0x4f, 0x50, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x55, 0x42, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x43, 0x52, 0x4f, 0x42, 0x46,
	0x44, 0x10, 0x03, 0x22, 0xa5, 0x01, 0x0a, 0x16, 0x42, 0x66, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24,
	0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6e, 0x64, 0x6b,
	0x2e, 0x53, 0x64, 0x6b, 0x4d, 0x67, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x02, 0x6f, 0x70, 0x12, 0x30, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x64, 0x6b, 0x2e, 0x42, 0x66, 0x64, 0x6d, 0x67, 0x72, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x50,
	0x62, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x64, 0x6b, 0x2e, 0x42, 0x66, 0x64, 0x6d, 0x67,
	0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x62, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x4e, 0x0a, 0x13, 0x42,
	0x66, 0x64, 0x6d, 0x67, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x49,
	0x54, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x55, 0x50, 0x10, 0x04, 0x2a, 0x5e, 0x0a, 0x11, 0x42,
	0x66, 0x64, 0x6d, 0x67, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x14, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x45,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x32, 0x50, 0x10, 0x01,
	0x12, 0x19, 0x0a, 0x15, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4d, 0x49, 0x43, 0x52, 0x4f, 0x42, 0x46, 0x44, 0x10, 0x02, 0x42, 0x25, 0x5a, 0x23, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x6f, 0x6b, 0x69, 0x61, 0x2f,
	0x73, 0x72, 0x6c, 0x69, 0x6e, 0x75, 0x78, 0x2d, 0x6e, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x6e,
	0x64, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ndk_bfd_service_proto_rawDescOnce sync.Once
	file_ndk_bfd_service_proto_rawDescData = file_ndk_bfd_service_proto_rawDesc
)

func file_ndk_bfd_service_proto_rawDescGZIP() []byte {
	file_ndk_bfd_service_proto_rawDescOnce.Do(func() {
		file_ndk_bfd_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_ndk_bfd_service_proto_rawDescData)
	})
	return file_ndk_bfd_service_proto_rawDescData
}

var file_ndk_bfd_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_ndk_bfd_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ndk_bfd_service_proto_goTypes = []interface{}{
	(BfdmgrSessionStatus)(0),                             // 0: ndk.BfdmgrSessionStatus
	(BfdmgrSessionType)(0),                               // 1: ndk.BfdmgrSessionType
	(BfdmgrGeneralSessionDataPb_BfdmgrSessionSubType)(0), // 2: ndk.BfdmgrGeneralSessionDataPb.BfdmgrSessionSubType
	(*BfdSessionSubscriptionRequest)(nil),                // 3: ndk.BfdSessionSubscriptionRequest
	(*BfdmgrGeneralSessionKeyPb)(nil),                    // 4: ndk.BfdmgrGeneralSessionKeyPb
	(*BfdmgrGeneralSessionDataPb)(nil),                   // 5: ndk.BfdmgrGeneralSessionDataPb
	(*BfdSessionNotification)(nil),                       // 6: ndk.BfdSessionNotification
	(*IpAddressPb)(nil),                                  // 7: ndk.IpAddressPb
	(SdkMgrOperation)(0),                                 // 8: ndk.SdkMgrOperation
}
var file_ndk_bfd_service_proto_depIdxs = []int32{
	4, // 0: ndk.BfdSessionSubscriptionRequest.key:type_name -> ndk.BfdmgrGeneralSessionKeyPb
	1, // 1: ndk.BfdmgrGeneralSessionKeyPb.type:type_name -> ndk.BfdmgrSessionType
	7, // 2: ndk.BfdmgrGeneralSessionKeyPb.src_ip_addr:type_name -> ndk.IpAddressPb
	7, // 3: ndk.BfdmgrGeneralSessionKeyPb.dst_ip_addr:type_name -> ndk.IpAddressPb
	0, // 4: ndk.BfdmgrGeneralSessionDataPb.status:type_name -> ndk.BfdmgrSessionStatus
	2, // 5: ndk.BfdmgrGeneralSessionDataPb.sub_type:type_name -> ndk.BfdmgrGeneralSessionDataPb.BfdmgrSessionSubType
	8, // 6: ndk.BfdSessionNotification.op:type_name -> ndk.SdkMgrOperation
	4, // 7: ndk.BfdSessionNotification.key:type_name -> ndk.BfdmgrGeneralSessionKeyPb
	5, // 8: ndk.BfdSessionNotification.data:type_name -> ndk.BfdmgrGeneralSessionDataPb
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_ndk_bfd_service_proto_init() }
func file_ndk_bfd_service_proto_init() {
	if File_ndk_bfd_service_proto != nil {
		return
	}
	file_ndk_sdk_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ndk_bfd_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BfdSessionSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ndk_bfd_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BfdmgrGeneralSessionKeyPb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ndk_bfd_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BfdmgrGeneralSessionDataPb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ndk_bfd_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BfdSessionNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ndk_bfd_service_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ndk_bfd_service_proto_goTypes,
		DependencyIndexes: file_ndk_bfd_service_proto_depIdxs,
		EnumInfos:         file_ndk_bfd_service_proto_enumTypes,
		MessageInfos:      file_ndk_bfd_service_proto_msgTypes,
	}.Build()
	File_ndk_bfd_service_proto = out.File
	file_ndk_bfd_service_proto_rawDesc = nil
	file_ndk_bfd_service_proto_goTypes = nil
	file_ndk_bfd_service_proto_depIdxs = nil
}
